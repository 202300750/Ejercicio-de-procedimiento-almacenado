CREATE DATABASE IF NOT EXISTS mi_base;
USE mi_base;

DROP TABLE IF EXISTS Transacciones;
DROP TABLE IF EXISTS Cuentas;

CREATE TABLE Cuentas (
    Cuenta INT PRIMARY KEY,
    TotalCreditos DECIMAL(10,2) DEFAULT 0.00,
    TotalDebitos DECIMAL(10,2) DEFAULT 0.00,
    Saldo DECIMAL(10,2) DEFAULT 0.00
);


DROP TABLE IF EXISTS Transacciones;
DROP TABLE IF EXISTS Cuentas;

CREATE TABLE Cuentas (
    Cuenta INT PRIMARY KEY,
    TotalCreditos DECIMAL(10,2) DEFAULT 0.00,
    TotalDebitos DECIMAL(10,2) DEFAULT 0.00,
    Saldo DECIMAL(10,2) DEFAULT 0.00
);

INSERT INTO Cuentas (Cuenta, TotalCreditos, TotalDebitos, Saldo) VALUES
(20010001, 800.00, 0.00, 800.00),
(20010002, 560.00, 0.00, 560.00),
(20010003, 1254.00, 0.00, 1254.00),
(20010004, 15000.00, 0.00, 15000.00),
(20010005, 256.00, 0.00, 256.00);

CREATE TABLE Transacciones (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Cuenta INT,
    Fecha DATE,
    Credito DECIMAL(10,2) DEFAULT 0.00,
    Debito DECIMAL(10,2) DEFAULT 0.00,
    FOREIGN KEY (Cuenta) REFERENCES Cuentas(Cuenta)
);

INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) VALUES
(20010001, '2024-12-12', 800.00, 0.00),
(20010002, '2025-01-05', 560.00, 0.00),
(20010003, '2024-10-30', 1254.00, 0.00),
(20010004, '2025-01-14', 15000.00, 0.00),
(20010005, '2024-11-23', 256.00, 0.00);

DELIMITER //
CREATE PROCEDURE RegistrarTransaccion(
    IN p_Cuenta INT,
    IN p_Fecha DATE,
    IN p_Monto DECIMAL(10,2),
    IN p_Tipo CHAR(1) -- 'C' para crédito, 'D' para débito
)
BEGIN
    DECLARE v_ExisteCuenta INT;
    DECLARE v_TotalCreditos DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_TotalDebitos DECIMAL(10,2) DEFAULT 0.00;
    DECLARE v_Saldo DECIMAL(10,2) DEFAULT 0.00;

    -- Verificar si la cuenta existe
    SELECT COUNT(*) INTO v_ExisteCuenta FROM Cuentas WHERE Cuenta = p_Cuenta;
    IF v_ExisteCuenta = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Error: La cuenta no existe.';
    END IF;

    -- Insertar la nueva transacción
    IF p_Tipo = 'C' THEN
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito)
        VALUES (p_Cuenta, p_Fecha, p_Monto, 0.00);
    ELSEIF p_Tipo = 'D' THEN
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito)
        VALUES (p_Cuenta, p_Fecha, 0.00, p_Monto);
    ELSE
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Error: Tipo de transacción inválido. Use "C" para crédito o "D" para débito.';
    END IF;

    -- Obtener la suma de créditos
    SELECT COALESCE(SUM(Credito), 0) INTO v_TotalCreditos 
    FROM Transacciones 
    WHERE Cuenta = p_Cuenta;

    -- Obtener la suma de débitos
    SELECT COALESCE(SUM(Debito), 0) INTO v_TotalDebitos 
    FROM Transacciones 
    WHERE Cuenta = p_Cuenta;

    -- Calcular el nuevo saldo
    SET v_Saldo = v_TotalCreditos - v_TotalDebitos;

    -- Actualizar la cuenta con los nuevos valores
    UPDATE Cuentas 
    SET TotalCreditos = v_TotalCreditos,
        TotalDebitos = v_TotalDebitos,
        Saldo = v_Saldo
    WHERE Cuenta = p_Cuenta;
END;
//
DELIMITER ;

-- Prueba del procedimiento almacenado
CALL RegistrarTransaccion(20010001, '2025-03-08', 500.00, 'C'); -- Agregar un crédito
CALL RegistrarTransaccion(20010002, '2025-03-08', 200.00, 'D'); -- Agregar un débito

-- Verificar resultados
SELECT * FROM Cuentas;
SELECT * FROM Transacciones;
